datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

/// ------------------
/// ENTITIES
/// ------------------

model Series {
    id          String         @id
    title       String
    image       String?
    imageCredit String?
    planets     SeriesPlanet[]
    books       Book[]
}

model Planet {
    id           String         @id
    name         String
    series       SeriesPlanet[]
    characters   Character[]
    shards       PlanetShard[]
    investitures Investiture[]
}

model Book {
    id          String          @id
    title       String
    seriesId    String
    image       String?
    imageCredit String?
    releaseDate DateTime?
    summary     String?
    series      Series          @relation(fields: [seriesId], references: [id])
    characters  BookCharacter[]
}

model Character {
    id           String                 @id
    name         String
    description  String?
    image        String?
    imageCredit  String?
    planetId     String
    planet       Planet                 @relation(fields: [planetId], references: [id])
    books        BookCharacter[]
    investitures CharacterInvestiture[]
}

model Shard {
    id           String             @id
    name         String
    description  String?
    image        String?
    imageCredit  String?
    planets      PlanetShard[]
    investitures ShardInvestiture[]
}

model Investiture {
    id          String                 @id
    name        String
    description String?
    planetId    String?
    planet      Planet?                @relation(fields: [planetId], references: [id])
    characters  CharacterInvestiture[]
    shards      ShardInvestiture[]
}

/// ------------------
/// MANY-TO-MANY TABLES
/// ------------------

model SeriesPlanet {
    id       String @id @default(uuid())
    seriesId String
    planetId String

    series Series @relation(fields: [seriesId], references: [id])
    planet Planet @relation(fields: [planetId], references: [id])

    @@unique([seriesId, planetId])
}

model BookCharacter {
    id          String @id @default(uuid())
    bookId      String
    characterId String

    book      Book      @relation(fields: [bookId], references: [id])
    character Character @relation(fields: [characterId], references: [id])

    @@unique([bookId, characterId])
}

model PlanetShard {
    id       String @id @default(uuid())
    planetId String
    shardId  String

    planet Planet @relation(fields: [planetId], references: [id])
    shard  Shard  @relation(fields: [shardId], references: [id])

    @@unique([planetId, shardId])
}

model CharacterInvestiture {
    id            String @id @default(uuid())
    characterId   String
    investitureId String

    character   Character   @relation(fields: [characterId], references: [id])
    investiture Investiture @relation(fields: [investitureId], references: [id])

    @@unique([characterId, investitureId])
}

model ShardInvestiture {
    id            String @id @default(uuid())
    investitureId String
    shardId       String

    investiture Investiture @relation(fields: [investitureId], references: [id])
    shard       Shard       @relation(fields: [shardId], references: [id])

    @@unique([investitureId, shardId])
}
